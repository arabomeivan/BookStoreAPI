name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, develop]

jobs:
  test_backend:
    runs-on: ubuntu-latest
    env:
      MONGODB_URL: ${{ secrets.MONGODB_URL }}        # Atlas connection string
      JWT_SECRET: ${{ secrets.JWT_SECRET }}          # if you use one
      PORT: 5000
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 16 and cache
        uses: actions/setup-node@v4
        with:
          node-version: '16'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Prepare .env file
        run: |
          if [ -f .env.example ]; then
            cp .env.example .env
            # overwrite or inject required values explicitly
            sed -i "s|^MONGODB_ATLAS_URL=.*|MONGODB_ATLAS_URL=${MONGODB_URL}|" .env || echo "MONGODB_ATLAS_URL=${MONGODB_URL}" >> .env
            sed -i "s|^JWT_SECRET=.*|JWT_SECRET=${JWT_SECRET}|" .env || echo "JWT_SECRET=${JWT_SECRET}" >> .env
            echo "Using Atlas URL from secret."
          else
            echo "MONGODB_LOCAL=false" > .env
            echo "MONGODB_ATLAS_URL=${MONGODB_URL}" >> .env
            echo "JWT_SECRET=${JWT_SECRET}" >> .env
            echo "PORT=5000" >> .env
          fi
          echo "Contents of .env (redacted for secrets):"
          sed -e 's/=.*/=REDACTED/' .env

      - name: Start backend in background
        run: |
          npm start > backend.log 2>&1 &
          echo "Waiting for backend health endpoint..."
          n=0
          until curl --silent --fail http://localhost:5000/health || [ $n -ge 30 ]; do
            n=$((n+1))
            echo "Backend not ready yet ($n/30)..."
            sleep 2
          done
          if [ $n -ge 30 ]; then
            echo "Backend failed to start in time. Dumping log:" >&2
            tail -n 100 backend.log
            exit 1
          fi
          echo "Backend is ready."
      - name: Show backend startup log snippet
        run: head -n 100 backend.log || true

      - name: Run Cypress Tests
        run: |
          set -o pipefail
          npm run test 2>&1 | tee cypress_output.log

  deploy:
    needs: test_backend
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deployment
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"
